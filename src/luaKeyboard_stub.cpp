/*----------------------------------------------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------#
#------  This File is Part Of : ----------------------------------------------------------------------------------------#
#------- _  -------------------  ______   _   --------------------------------------------------------------------------#
#------ | | ------------------- (_____ \ | |  --------------------------------------------------------------------------#
#------ | | ---  _   _   ____    _____) )| |  ____  _   _   ____   ____   ----------------------------------------------#
#------ | | --- | | | | / _  |  |  ____/ | | / _  || | | | / _  ) / ___)  ----------------------------------------------#
#------ | |_____| |_| |( ( | |  | |      | |( ( | || |_| |( (/ / | |  --------------------------------------------------#
#------ |_______)\____| \_||_|  |_|      |_| \_||_| \__  | \____)|_|  --------------------------------------------------#
#------------------------------------------------- (____/  -------------------------------------------------------------#
#------------------------   ______   _   -------------------------------------------------------------------------------#
#------------------------  (_____ \ | |  -------------------------------------------------------------------------------#
#------------------------   _____) )| | _   _   ___   ------------------------------------------------------------------#
#------------------------  |  ____/ | || | | | /___)  ------------------------------------------------------------------#
#------------------------  | |      | || |_| ||___ |  ------------------------------------------------------------------#
#------------------------  |_|      |_| \____|(___/   ------------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------#
#- Licensed under the GPL License --------------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------#
#- Copyright (c) Nanni <lpp.nanni@gmail.com> ---------------------------------------------------------------------------#
#- Copyright (c) Rinnegatamante <rinnegatamante@gmail.com> -------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------#
#- SDL Port: Keyboard Module Stub --------------------------------------------------------------------------------------#
#-----------------------------------------------------------------------------------------------------------------------*/

#include <stdlib.h>
#include <string.h>
#include "luaplayer.h"

#define stringify(str) #str
#define VariableRegister(lua, value) do { lua_pushinteger(lua, value); lua_setglobal (lua, stringify(value)); } while(0)

// Keyboard status constants (These need to match what the game expects)
static uint8_t FINISHED = 0;
static uint8_t RUNNING = 1;
static uint8_t CANCELED = 2;

// SDL Port: All keyboard functions are stubbed out since on-screen keyboard is not essential for basic LPP operation
// These functions return appropriate default values to prevent Lua script errors

static int lua_start(lua_State *L) { return 0; }
static int lua_clear(lua_State *L) { return 0; }
static int lua_getState(lua_State *L) { lua_pushinteger(L, FINISHED); return 1; }
static int lua_getInput(lua_State *L) { lua_pushstring(L, ""); return 1; }
static int lua_show(lua_State *L) { 
    // Stub: return default value to prevent crashes
    // In a real implementation, this would show an on-screen keyboard
    if (lua_gettop(L) >= 2) {
        // If default value provided, return it
        lua_pushvalue(L, 2);
    } else {
        lua_pushstring(L, "");
    }
    return 1; 
}

//Register our Keyboard Functions
static const luaL_Reg Keyboard_functions[] = {
  {"start",     lua_start},
  {"clear",     lua_clear}, 
  {"getState",  lua_getState},
  {"getInput",  lua_getInput},
  {"show",      lua_show},
  {0, 0}
};

void luaKeyboard_init(lua_State *L) {
	lua_newtable(L);
	luaL_setfuncs(L, Keyboard_functions, 0);
	lua_setglobal(L, "Keyboard");
	VariableRegister(L, FINISHED);
	VariableRegister(L, RUNNING);
	VariableRegister(L, CANCELED);
}